{"version":3,"file":"static/webpack/static/development/pages/index.js.ff3481045f2a60bf9f6a.hot-update.js","sources":["webpack:///./components/Timer.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components/macro'\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      days: 1,\n      hours: 4,\n      min: 70,\n      sec: 10,\n    }\n  }\n\n  componentDidMount() {\n    // update every second\n    this.interval = setInterval(() => {\n      const date = this.calculateTimer(this.props.date)\n      date ? this.setState(date) : this.stop()\n    }, 1000)\n  }\n\n  componentWillUnmount() {\n    this.stop()\n  }\n\n  calculateTimer(endDate) {\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000\n\n    // clear countdown when date is reached\n    if (diff <= 0) return false\n\n    const timeLeft = {\n      years: 0,\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n      millisec: 0,\n    }\n\n    // calculate time difference between now and expected date\n    if (diff >= 365.25 * 86400) {\n      // 365.25 * 24 * 60 * 60\n      timeLeft.years = Math.floor(diff / (365.25 * 86400))\n      diff -= timeLeft.years * 365.25 * 86400\n    }\n    if (diff >= 86400) {\n      // 24 * 60 * 60\n      timeLeft.days = Math.floor(diff / 86400)\n      diff -= timeLeft.days * 86400\n    }\n    if (diff >= 3600) {\n      // 60 * 60\n      timeLeft.hours = Math.floor(diff / 3600)\n      diff -= timeLeft.hours * 3600\n    }\n    if (diff >= 60) {\n      timeLeft.min = Math.floor(diff / 60)\n      diff -= timeLeft.min * 60\n    }\n    timeLeft.sec = diff\n\n    return timeLeft\n  }\n\n  stop() {\n    clearInterval(this.interval)\n  }\n\n  addLeadingZeros(value) {\n    value = String(value)\n    while (value.length < 2) {\n      value = '0' + value\n    }\n    return value\n  }\n\n  render() {\n    const countDown = this.state\n    const hasDays = countDown.days > 0\n\n    return (\n      <Container>\n        {hasDays && (\n          <div>\n            <p>\n              <span>{this.addLeadingZeros(countDown.days)}</span> D\n            </p>\n          </div>\n        )}\n        <div>\n          <p>\n            <span>{this.addLeadingZeros(countDown.hours)}</span> H\n          </p>\n        </div>\n        <div>\n          <p>\n            <span>{this.addLeadingZeros(countDown.min)}</span> M\n          </p>\n        </div>\n        {!hasDays && (\n          <div>\n            <p>\n              <span>{this.addLeadingZeros(countDown.sec)}</span> S\n            </p>\n          </div>\n        )}\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  margin: 0 -10px;\n  div {\n    padding: 0 10px;\n    span {\n      color: black;\n    }\n  }\n`\n\nTimer.defaultProps = {\n  date: new Date(),\n}\n\nexport default Timer\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAHA;AASA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA5GA;AACA;AA8GA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AADA;AAIA;;;;A","sourceRoot":""}
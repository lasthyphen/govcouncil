{"version":3,"file":"static/webpack/static/development/pages/index.js.f9292cccf2ab84136cca.hot-update.js","sources":["webpack:///./components/Stats.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components/macro'\nimport Fade from 'react-reveal/Fade'\nimport { breakpoint } from 'lib/microsite-logic'\nimport { bigNum, useAnJurors } from 'lib/utils'\nimport { useAntStaked } from 'lib/web3-contracts'\nimport { formatUnits, useTokenBalanceToUsd } from 'lib/web3-utils'\n\nimport anj from './assets/anj-token.svg'\nimport ant from './converter/assets/ant.svg'\nimport jurors from './assets/juror-total.svg'\n\nconst medium = css => breakpoint('medium', css)\n\nfunction formatAndSplitAmount(value) {\n  const formatted = formatUnits(value, { replaceZeroBy: '0' })\n  let [whole, decimal] = formatted.split('.')\n\n  // Round and keep the last two digits\n  decimal = Math.round(parseInt((decimal || '0').slice(0, 4)) / 100)\n\n  return [whole || '0', decimal ? String(decimal) : '']\n}\n\nconst Stats = () => {\n  const antStaked = useAntStaked()\n  const [numOfjurors, activeAnj] = useAnJurors()\n\n  const [wholeAnt, decimalAnt] = formatAndSplitAmount(antStaked)\n  const [wholeAnj, decimalAnj] = formatAndSplitAmount(activeAnj)\n\n  const usdAnt = useTokenBalanceToUsd('LQ', 18, bigNum(antStaked))\n  const unratedAnj = bigNum(activeAnj.toString()).div(100)\n  const usdAnj = useTokenBalanceToUsd('DGC', 18, unratedAnj)\n\n  return (\n    <StatsSection>\n      <StatsDiv>\n        <Fade bottom duration={1200} delay={300}>\n          <Stat>\n            <TokenImg src={ant} alt=\"\" />\n            <h2>Likability Quotient</h2>\n            <NumberWrapper>\n              <h2 className=\"pink number\">\n                1000\n                {decimalAnt && (\n                  <span>\n                    .<span className=\"decimal\">{decimalAnt}</span>\n                  </span>\n                )}\n              </h2>\n              <h3 className=\"denomination\">HAL</h3>\n            </NumberWrapper>\n            <h3>{`$${usdAnt} USD`}</h3>\n          </Stat>\n        </Fade>\n        <Fade bottom duration={1200} delay={300}>\n          <Stat>\n            <TokenImg src={anj} alt=\"\" />\n            <h2>Dijets Governance</h2>\n            <NumberWrapper>\n              <h2 className=\"pink number\">\n                50,000\n                {decimalAnj && (\n                  <span>\n                    .<span className=\"decimal\">{decimalAnj}</span>\n                  </span>\n                )}\n              </h2>\n              <h3 className=\"denomination\">DGC</h3>\n            </NumberWrapper>\n            <h3>{`$${usdAnj} USD`}</h3>\n          </Stat>\n        </Fade>\n        <Fade bottom duration={1200} delay={300}>\n          <Stat\n            css={`\n              @media screen and (max-width: 1024px) {\n                margin-bottom: 114px;\n              }\n            `}\n          >\n            <TokenImg src={jurors} alt=\"\" />\n            <h2>Council Members</h2>\n            <NumberWrapper jurors>\n              <h2 className=\"pink number\">6</h2>\n              <h3 className=\"denomination\">ACTIVE JURORS</h3>\n            </NumberWrapper>\n          </Stat>\n        </Fade>\n      </StatsDiv>\n    </StatsSection>\n  )\n}\n\nconst TokenImg = styled.img`\n  width: 50px;\n  height: 56px;\n  margin-bottom: 24px;\n  @media screen and (max-width: 1024px) {\n    margin: auto;\n    margin-bottom: 24px;\n  }\n`\nconst NumberWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: ${props => (props.jurors ? '34px' : '')};\n  @media screen and (max-width: 1024px) {\n    margin: auto;\n    text-align: center;\n  }\n`\nconst Stat = styled.div`\n  width: 278px;\n  min-height: 191px;\n  display: flex;\n  flex-direction: column;\n\n  h2 {\n    color: white;\n    font-size: 27px;\n  }\n\n  h3 {\n    color: white;\n    font-size: 20px;\n  }\n  .number {\n    font-size: 48px;\n  }\n\n  .decimal {\n    padding-top: 8px;\n    font-size: 36px;\n  }\n\n  .denomination {\n    margin-left: 8px;\n    padding-top: 19px;\n    font-size: 22px;\n    color: #8a96a0;\n  }\n\n  .pink {\n    font-weight: bold;\n    letter-spacing: -0.45px;\n    color: rgba(1, 191, 227);\n    background: linear-gradient(\n      to right,\n      #ff7c7c 20%,\n      #ffc58f 40%,\n      #ffc58f 60%,\n      #ff7c7c 80%\n    );\n    background-size: 200% auto;\n    background-clip: text;\n    text-fill-color: transparent;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n\n    animation: shine 4s linear infinite;\n    display: block;\n    ${medium('display: inline;')};\n  }\n  @media screen and (max-width: 1024px) {\n    text-align: center;\n    margin-bottom: 32px;\n  }\n`\nconst StatsSection = styled.section`\n  position: relative;\n  z-index: 1;\n  background: #1c1c1c;\n  min-height: 200px;\n`\n\nconst StatsDiv = styled.div`\n  width: 80%;\n  max-width: 1180px;\n  margin: auto;\n  margin-bottom: 120px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  @media screen and (max-width: 1024px) {\n    display: grid;\n    grid-template-columns: 1fr;\n    justify-items: center;\n    margin: auto;\n  }\n`\n\nexport default Stats\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;;;;;;AAwDA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAgBA;;;;A","sourceRoot":""}